Ext.data.JsonP.Ext_data_JsonStore({"tagname":"class","name":"Ext.data.JsonStore","extends":"Ext.data.Store","mixins":[],"alternateClassNames":[],"aliases":{"widget":["jsonstore"]},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{"author":["Ed Spencer"],"private":true},"private":true,"id":"class-Ext.data.JsonStore","code_type":"ext_define","members":{"cfg":[{"name":"proxy","tagname":"cfg","owner":"Ext.data.JsonStore","meta":{"private":true},"id":"cfg-proxy"}],"property":[],"method":[{"name":"getProxy","tagname":"method","owner":"Ext.data.JsonStore","meta":{},"id":"method-getProxy"},{"name":"setProxy","tagname":"method","owner":"Ext.data.JsonStore","meta":{},"id":"method-setProxy"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":1,"files":[{"filename":"JsonStore.js","href":"JsonStore.html#Ext-data-JsonStore"}],"html_meta":{"author":null,"private":null},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":["Ext.data.Store"],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>Ext.data.Store<div class='subclass '><strong>Ext.data.JsonStore</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/JsonStore.html#Ext-data-JsonStore' target='_blank'>JsonStore.js</a></div></pre><div class='doc-contents'><p class='private'><strong>NOTE</strong> This is a private utility class for internal use by the framework. Don't rely on its existence.</p><p>Small helper class to make creating Ext.data.Stores from JSON data easier.\nA JsonStore will be automatically configured with a <a href=\"#!/api/Ext.data.reader.Json\" rel=\"Ext.data.reader.Json\" class=\"docClass\">Ext.data.reader.Json</a>.</p>\n\n<p>A store configuration would be something like:</p>\n\n<pre><code>var store = new <a href=\"#!/api/Ext.data.JsonStore\" rel=\"Ext.data.JsonStore\" class=\"docClass\">Ext.data.JsonStore</a>({\n    // store configs\n    autoDestroy: true,\n    storeId: 'myStore',\n\n    proxy: {\n        type: 'ajax',\n        url: 'get-images.php',\n        reader: {\n            type: 'json',\n            root: 'images',\n            idProperty: 'name'\n        }\n    },\n\n    // alternatively, a <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a> name can be given (see Ext.data.Store for an example)\n    fields: ['name', 'url', {name:'size', type: 'float'}, {name:'lastmod', type:'date'}]\n});\n</code></pre>\n\n<p>This store is configured to consume a returned object of the form:</p>\n\n<pre><code>{\n    images: [\n        {name: 'Image one', url:'/GetImage.php?id=1', size:46.5, lastmod: new Date(2007, 10, 29)},\n        {name: 'Image Two', url:'/GetImage.php?id=2', size:43.2, lastmod: new Date(2007, 10, 30)}\n    ]\n}\n</code></pre>\n\n<p>An object literal of this form could also be used as the data config option.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-proxy' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.JsonStore'>Ext.data.JsonStore</span><br/><a href='source/JsonStore.html#Ext-data-JsonStore-cfg-proxy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.JsonStore-cfg-proxy' class='name expandable'>proxy</a><span> : Object</span><strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>{type: 'ajax', reader: 'json', writer: 'json'}</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getProxy' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.JsonStore'>Ext.data.JsonStore</span><br/><a href='source/JsonStore.html#Ext-data-JsonStore-cfg-proxy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.JsonStore-method-getProxy' class='name expandable'>getProxy</a>( <span class='pre'></span> ) : Object</div><div class='description'><div class='short'>Returns the value of proxy. ...</div><div class='long'><p>Returns the value of <a href=\"#!/api/Ext.data.JsonStore-cfg-proxy\" rel=\"Ext.data.JsonStore-cfg-proxy\" class=\"docClass\">proxy</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-setProxy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.JsonStore'>Ext.data.JsonStore</span><br/><a href='source/JsonStore.html#Ext-data-JsonStore-cfg-proxy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.JsonStore-method-setProxy' class='name expandable'>setProxy</a>( <span class='pre'>proxy</span> )</div><div class='description'><div class='short'>Sets the value of proxy. ...</div><div class='long'><p>Sets the value of <a href=\"#!/api/Ext.data.JsonStore-cfg-proxy\" rel=\"Ext.data.JsonStore-cfg-proxy\" class=\"docClass\">proxy</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>proxy</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>"});