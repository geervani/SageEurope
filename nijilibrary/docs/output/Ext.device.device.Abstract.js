Ext.data.JsonP.Ext_device_device_Abstract({"tagname":"class","name":"Ext.device.device.Abstract","extends":"Ext.Base","mixins":["Ext.mixin.Observable"],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{"private":true},"private":true,"id":"class-Ext.device.device.Abstract","code_type":"ext_define","members":{"cfg":[],"property":[{"name":"name","tagname":"property","owner":"Ext.device.device.Abstract","meta":{},"id":"property-name"},{"name":"platform","tagname":"property","owner":"Ext.device.device.Abstract","meta":{},"id":"property-platform"},{"name":"scheme","tagname":"property","owner":"Ext.device.device.Abstract","meta":{},"id":"property-scheme"},{"name":"uuid","tagname":"property","owner":"Ext.device.device.Abstract","meta":{},"id":"property-uuid"}],"method":[{"name":"openURL","tagname":"method","owner":"Ext.device.device.Abstract","meta":{},"id":"method-openURL"}],"event":[{"name":"schemeupdate","tagname":"event","owner":"Ext.device.device.Abstract","meta":{},"id":"event-schemeupdate"}],"css_var":[],"css_mixin":[]},"linenr":1,"files":[{"filename":"Abstract.js","href":"Abstract5.html#Ext-device-device-Abstract"}],"html_meta":{"private":null},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":["Ext.Base"],"subclasses":[],"mixedInto":["Ext.device.Device"],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>Ext.Base<div class='subclass '><strong>Ext.device.device.Abstract</strong></div></div><h4>Mixins</h4><div class='dependency'>Ext.mixin.Observable</div><h4>Mixed into</h4><div class='dependency'><a href='#!/api/Ext.device.Device' rel='Ext.device.Device' class='docClass'>Ext.device.Device</a></div><h4>Files</h4><div class='dependency'><a href='source/Abstract5.html#Ext-device-device-Abstract' target='_blank'>Abstract.js</a></div></pre><div class='doc-contents'><p class='private'><strong>NOTE</strong> This is a private utility class for internal use by the framework. Don't rely on its existence.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-name' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.device.device.Abstract'>Ext.device.device.Abstract</span><br/><a href='source/Abstract5.html#Ext-device-device-Abstract-property-name' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.device.device.Abstract-property-name' class='name expandable'>name</a><span> : String</span></div><div class='description'><div class='short'>Returns the name of the current device. ...</div><div class='long'><p>Returns the name of the current device. If the current device does not have a name (for example, in a browser), it will\ndefault to <code>not available</code>.</p>\n\n<pre><code>alert('Device name: ' + <a href=\"#!/api/Ext.device.Device-property-name\" rel=\"Ext.device.Device-property-name\" class=\"docClass\">Ext.device.Device.name</a>);\n</code></pre>\n<p>Defaults to: <code>'not available'</code></p></div></div></div><div id='property-platform' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.device.device.Abstract'>Ext.device.device.Abstract</span><br/><a href='source/Abstract5.html#Ext-device-device-Abstract-property-platform' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.device.device.Abstract-property-platform' class='name expandable'>platform</a><span> : String</span></div><div class='description'><div class='short'>The current platform the device is running on. ...</div><div class='long'><p>The current platform the device is running on.</p>\n\n<pre><code>alert('Device platform: ' + <a href=\"#!/api/Ext.device.Device-property-platform\" rel=\"Ext.device.Device-property-platform\" class=\"docClass\">Ext.device.Device.platform</a>);\n</code></pre>\n</div></div></div><div id='property-scheme' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.device.device.Abstract'>Ext.device.device.Abstract</span><br/><a href='source/Abstract5.html#Ext-device-device-Abstract-property-scheme' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.device.device.Abstract-property-scheme' class='name expandable'>scheme</a><span> : Object/Boolean</span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='property-uuid' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.device.device.Abstract'>Ext.device.device.Abstract</span><br/><a href='source/Abstract5.html#Ext-device-device-Abstract-property-uuid' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.device.device.Abstract-property-uuid' class='name expandable'>uuid</a><span> : String</span></div><div class='description'><div class='short'>Returns a unique identifier for the current device. ...</div><div class='long'><p>Returns a unique identifier for the current device. If the current device does not have a unique identifier (for example,\nin a browser), it will default to <code>anonymous</code>.</p>\n\n<pre><code>alert('Device UUID: ' + <a href=\"#!/api/Ext.device.Device-property-uuid\" rel=\"Ext.device.Device-property-uuid\" class=\"docClass\">Ext.device.Device.uuid</a>);\n</code></pre>\n<p>Defaults to: <code>'anonymous'</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-openURL' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.device.device.Abstract'>Ext.device.device.Abstract</span><br/><a href='source/Abstract5.html#Ext-device-device-Abstract-method-openURL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.device.device.Abstract-method-openURL' class='name expandable'>openURL</a>( <span class='pre'>url</span> )</div><div class='description'><div class='short'>Opens a specified URL. ...</div><div class='long'><p>Opens a specified URL. The URL can contain a custom URL Scheme for another app or service:</p>\n\n<pre><code>// Safari\n<a href=\"#!/api/Ext.device.Device-method-openURL\" rel=\"Ext.device.Device-method-openURL\" class=\"docClass\">Ext.device.Device.openURL</a>('http://sencha.com');\n\n// Telephone\n<a href=\"#!/api/Ext.device.Device-method-openURL\" rel=\"Ext.device.Device-method-openURL\" class=\"docClass\">Ext.device.Device.openURL</a>('tel:6501231234');\n\n// SMS with a default number\n<a href=\"#!/api/Ext.device.Device-method-openURL\" rel=\"Ext.device.Device-method-openURL\" class=\"docClass\">Ext.device.Device.openURL</a>('sms:+12345678901');\n\n// Email client\n<a href=\"#!/api/Ext.device.Device-method-openURL\" rel=\"Ext.device.Device-method-openURL\" class=\"docClass\">Ext.device.Device.openURL</a>('mailto:rob@sencha.com');\n</code></pre>\n\n<p>You can find a full list of available URL schemes here: <a href=\"http://wiki.akosma.com/IPhone_URL_Schemes\">http://wiki.akosma.com/IPhone_URL_Schemes</a>.</p>\n\n<p><strong>Note:</strong> This currently only works on iOS using the Sencha Native Packager. Attempting to use this on PhoneGap, iOS Simulator\nor the browser will simply result in the current window location changing.**</p>\n\n<p>If successful, this will close the application (as another one opens).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>url</span> : String<div class='sub-desc'><p>The URL to open</p>\n</div></li></ul></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-event'>Events</h3><div class='subsection'><div id='event-schemeupdate' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.device.device.Abstract'>Ext.device.device.Abstract</span><br/><a href='source/Abstract5.html#Ext-device-device-Abstract-event-schemeupdate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.device.device.Abstract-event-schemeupdate' class='name expandable'>schemeupdate</a>( <span class='pre'>this, scheme, eOpts</span> )</div><div class='description'><div class='short'>Event which is fired when your Sencha Native packaged application is opened from another application using a custom U...</div><div class='long'><p>Event which is fired when your Sencha Native packaged application is opened from another application using a custom URL scheme.</p>\n\n<p>This event will only fire if the application was already open (in other words; <code>onReady</code> was already fired). This means you should check\nif <a href=\"#!/api/Ext.device.Device-property-scheme\" rel=\"Ext.device.Device-property-scheme\" class=\"docClass\">Ext.device.Device.scheme</a> is set in your Application <code>launch</code>/<code>onReady</code> method, and perform any needed changes for that URL (if defined).\nThen listen to this event for future changed.</p>\n\n<h2>Example</h2>\n\n<pre><code>Ext.application({\n    name: 'Sencha',\n    requires: ['<a href=\"#!/api/Ext.device.Device\" rel=\"Ext.device.Device\" class=\"docClass\">Ext.device.Device</a>'],\n    launch: function() {\n        if (<a href=\"#!/api/Ext.device.Device-property-scheme\" rel=\"Ext.device.Device-property-scheme\" class=\"docClass\">Ext.device.Device.scheme</a>) {\n            // the application was opened via another application. Do something:\n            console.log('Applicaton opened via another application: ' + Ext.device.Device.scheme.url);\n        }\n\n        // Listen for future changes\n        Ext.device.Device.on('schemeupdate', function(device, scheme) {\n            // the application was launched, closed, and then launched another from another application\n            // this means onReady wont be called again ('cause the application is already running in the \n            // background) - but this event will be fired\n            console.log('Applicated reopened via another application: ' + scheme.url);\n        }, this);\n    }\n});\n</code></pre>\n\n<p><strong>Note:</strong> This currently only works with the Sencha Native Packager. If you attempt to listen to this event when packaged with\nPhoneGap or simply in the browser, it will never fire.**</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.device.Device\" rel=\"Ext.device.Device\" class=\"docClass\">Ext.device.Device</a><div class='sub-desc'><p>The instance of <a href=\"#!/api/Ext.device.Device\" rel=\"Ext.device.Device\" class=\"docClass\">Ext.device.Device</a></p>\n</div></li><li><span class='pre'>scheme</span> : Object/Boolean<div class='sub-desc'><p>The scheme information, if opened via another application</p>\n<ul><li><span class='pre'>url</span> : String<div class='sub-desc'><p>The URL that was opened, if this application was opened via another application. Example: <code>sencha:</code></p>\n</div></li><li><span class='pre'>sourceApplication</span> : String<div class='sub-desc'><p>The source application that opened this application. Example: <code>com.apple.safari</code>.</p>\n</div></li></ul></div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to Ext.util.Observable.addListener.</p>\n\n\n\n</div></li></ul></div></div></div></div></div></div></div>"});