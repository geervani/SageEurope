Ext.data.JsonP.Ext_data_proxy_Memory({"tagname":"class","name":"Ext.data.proxy.Memory","extends":"Ext.data.proxy.Client","mixins":[],"alternateClassNames":["Ext.data.MemoryProxy"],"aliases":{"proxy":["memory"]},"singleton":false,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{"author":["Ed Spencer"],"aside":[{"type":"guide","name":"proxies"}]},"private":null,"id":"class-Ext.data.proxy.Memory","code_type":"ext_define","members":{"cfg":[{"name":"data","tagname":"cfg","owner":"Ext.data.proxy.Memory","meta":{},"id":"cfg-data"}],"property":[{"name":"isMemoryProxy","tagname":"property","owner":"Ext.data.proxy.Memory","meta":{"private":true},"id":"property-isMemoryProxy"}],"method":[{"name":"clear","tagname":"method","owner":"Ext.data.proxy.Memory","meta":{},"id":"method-clear"},{"name":"create","tagname":"method","owner":"Ext.data.proxy.Memory","meta":{},"id":"method-create"},{"name":"destroy","tagname":"method","owner":"Ext.data.proxy.Memory","meta":{},"id":"method-destroy"},{"name":"finishOperation","tagname":"method","owner":"Ext.data.proxy.Memory","meta":{"private":true},"id":"method-finishOperation"},{"name":"getData","tagname":"method","owner":"Ext.data.proxy.Memory","meta":{},"id":"method-getData"},{"name":"read","tagname":"method","owner":"Ext.data.proxy.Memory","meta":{},"id":"method-read"},{"name":"setData","tagname":"method","owner":"Ext.data.proxy.Memory","meta":{},"id":"method-setData"},{"name":"update","tagname":"method","owner":"Ext.data.proxy.Memory","meta":{},"id":"method-update"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":1,"files":[{"filename":"Memory.js","href":"Memory.html#Ext-data-proxy-Memory"}],"html_meta":{"author":null,"aside":[]},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":["Ext.data.proxy.Proxy","Ext.data.proxy.Client"],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Alternate names</h4><div class='alternate-class-name'>Ext.data.MemoryProxy</div><h4>Hierarchy</h4><div class='subclass first-child'>Ext.data.proxy.Proxy<div class='subclass '><a href='#!/api/Ext.data.proxy.Client' rel='Ext.data.proxy.Client' class='docClass'>Ext.data.proxy.Client</a><div class='subclass '><strong>Ext.data.proxy.Memory</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/Memory.html#Ext-data-proxy-Memory' target='_blank'>Memory.js</a></div></pre><div class='doc-contents'><p>In-memory proxy. This proxy simply uses a local variable for data storage/retrieval, so its contents are lost on\nevery page refresh.</p>\n\n<p>Usually this Proxy isn't used directly, serving instead as a helper to a Store where a reader\nis required to load data. For example, say we have a Store for a User model and have some inline data we want to\nload, but this data isn't in quite the right format: we can use a MemoryProxy with a JsonReader to read it into our\nStore:</p>\n\n<pre><code>//this is the model we will be using in the store\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('User', {\n    extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n    config: {\n        fields: [\n            {name: 'id',    type: 'int'},\n            {name: 'name',  type: 'string'},\n            {name: 'phone', type: 'string', mapping: 'phoneNumber'}\n        ]\n    }\n});\n\n//this data does not line up to our model fields - the phone field is called phoneNumber\nvar data = {\n    users: [\n        {\n            id: 1,\n            name: 'Ed Spencer',\n            phoneNumber: '555 1234'\n        },\n        {\n            id: 2,\n            name: 'Abe Elias',\n            phoneNumber: '666 1234'\n        }\n    ]\n};\n\n//note how we set the 'root' in the reader to match the data structure above\nvar store = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('Ext.data.Store', {\n    autoLoad: true,\n    model: 'User',\n    data : data,\n    proxy: {\n        type: 'memory',\n        reader: {\n            type: 'json',\n            root: 'users'\n        }\n    }\n});\n</code></pre>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-data' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.proxy.Memory'>Ext.data.proxy.Memory</span><br/><a href='source/Memory.html#Ext-data-proxy-Memory-cfg-data' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.proxy.Memory-cfg-data' class='name expandable'>data</a><span> : Object</span></div><div class='description'><div class='short'>Optional data to pass to configured Reader. ...</div><div class='long'><p>Optional data to pass to configured Reader.</p>\n<p>Defaults to: <code>[]</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-isMemoryProxy' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.proxy.Memory'>Ext.data.proxy.Memory</span><br/><a href='source/Memory.html#Ext-data-proxy-Memory-property-isMemoryProxy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.proxy.Memory-property-isMemoryProxy' class='name expandable'>isMemoryProxy</a><span> : Boolean</span><strong class='private signature' >private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>true</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-clear' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.proxy.Memory'>Ext.data.proxy.Memory</span><br/><a href='source/Memory.html#Ext-data-proxy-Memory-method-clear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.proxy.Memory-method-clear' class='name expandable'>clear</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Abstract function that must be implemented by each ClientProxy subclass. ...</div><div class='long'><p>Abstract function that must be implemented by each ClientProxy subclass. This should purge all record data\nfrom the client side storage, as well as removing any supporting data (such as lists of record IDs)</p>\n<p>Overrides: <a href='#!/api/Ext.data.proxy.Client-method-clear' rel='Ext.data.proxy.Client-method-clear' class='docClass'>Ext.data.proxy.Client.clear</a></p></div></div></div><div id='method-create' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.proxy.Memory'>Ext.data.proxy.Memory</span><br/><a href='source/Memory.html#Ext-data-proxy-Memory-method-create' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.proxy.Memory-method-create' class='name expandable'>create</a>( <span class='pre'>operation, callback, scope</span> )</div><div class='description'><div class='short'>Currently this is a hard-coded method that simply commits any records and sets the operation to successful,\nthen call...</div><div class='long'><p>Currently this is a hard-coded method that simply commits any records and sets the operation to successful,\nthen calls the callback function, if provided. It is essentially mocking a server call in memory, but since\nthere is no real back end in this case there's not much else to do. This method can be easily overridden to\nimplement more complex logic if needed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>operation</span> : <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a><div class='sub-desc'><p>The Operation to perform</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>Callback function to be called when the Operation has completed (whether\nsuccessful or not)</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>Scope to execute the callback function in</p>\n</div></li></ul></div></div></div><div id='method-destroy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.proxy.Memory'>Ext.data.proxy.Memory</span><br/><a href='source/Memory.html#Ext-data-proxy-Memory-method-destroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.proxy.Memory-method-destroy' class='name expandable'>destroy</a>( <span class='pre'>operation, callback, scope</span> )</div><div class='description'><div class='short'>Currently this is a hard-coded method that simply commits any records and sets the operation to successful,\nthen call...</div><div class='long'><p>Currently this is a hard-coded method that simply commits any records and sets the operation to successful,\nthen calls the callback function, if provided. It is essentially mocking a server call in memory, but since\nthere is no real back end in this case there's not much else to do. This method can be easily overridden to\nimplement more complex logic if needed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>operation</span> : <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a><div class='sub-desc'><p>The Operation to perform</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>Callback function to be called when the Operation has completed (whether\nsuccessful or not)</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>Scope to execute the callback function in</p>\n</div></li></ul></div></div></div><div id='method-finishOperation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.proxy.Memory'>Ext.data.proxy.Memory</span><br/><a href='source/Memory.html#Ext-data-proxy-Memory-method-finishOperation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.proxy.Memory-method-finishOperation' class='name expandable'>finishOperation</a>( <span class='pre'>operation, callback, scope</span> )<strong class='private signature' >private</strong></div><div class='description'><div class='short'>Fake processing function to commit the records, set the current operation\nto successful and call the callback if prov...</div><div class='long'><p>Fake processing function to commit the records, set the current operation\nto successful and call the callback if provided. This function is shared\nby the create, update and destroy methods to perform the bare minimum\nprocessing required for the proxy to register a result from the action.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>operation</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>callback</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getData' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.proxy.Memory'>Ext.data.proxy.Memory</span><br/><a href='source/Memory.html#Ext-data-proxy-Memory-cfg-data' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.proxy.Memory-method-getData' class='name expandable'>getData</a>( <span class='pre'></span> ) : Object</div><div class='description'><div class='short'>Returns the value of data. ...</div><div class='long'><p>Returns the value of <a href=\"#!/api/Ext.data.proxy.Memory-cfg-data\" rel=\"Ext.data.proxy.Memory-cfg-data\" class=\"docClass\">data</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-read' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.proxy.Memory'>Ext.data.proxy.Memory</span><br/><a href='source/Memory.html#Ext-data-proxy-Memory-method-read' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.proxy.Memory-method-read' class='name expandable'>read</a>( <span class='pre'>operation, callback, scope</span> )</div><div class='description'><div class='short'>Reads data from the configured data object. ...</div><div class='long'><p>Reads data from the configured <a href=\"#!/api/Ext.data.proxy.Memory-cfg-data\" rel=\"Ext.data.proxy.Memory-cfg-data\" class=\"docClass\">data</a> object. Uses the Proxy's reader, if present.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>operation</span> : <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a><div class='sub-desc'><p>The read Operation</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>The callback to call when reading has completed</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>The scope to call the callback function in</p>\n</div></li></ul></div></div></div><div id='method-setData' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.proxy.Memory'>Ext.data.proxy.Memory</span><br/><a href='source/Memory.html#Ext-data-proxy-Memory-cfg-data' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.proxy.Memory-method-setData' class='name expandable'>setData</a>( <span class='pre'>data</span> )</div><div class='description'><div class='short'>Sets the value of data. ...</div><div class='long'><p>Sets the value of <a href=\"#!/api/Ext.data.proxy.Memory-cfg-data\" rel=\"Ext.data.proxy.Memory-cfg-data\" class=\"docClass\">data</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>data</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-update' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.proxy.Memory'>Ext.data.proxy.Memory</span><br/><a href='source/Memory.html#Ext-data-proxy-Memory-method-update' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.proxy.Memory-method-update' class='name expandable'>update</a>( <span class='pre'>operation, callback, scope</span> )</div><div class='description'><div class='short'>Currently this is a hard-coded method that simply commits any records and sets the operation to successful,\nthen call...</div><div class='long'><p>Currently this is a hard-coded method that simply commits any records and sets the operation to successful,\nthen calls the callback function, if provided. It is essentially mocking a server call in memory, but since\nthere is no real back end in this case there's not much else to do. This method can be easily overridden to\nimplement more complex logic if needed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>operation</span> : <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a><div class='sub-desc'><p>The Operation to perform</p>\n</div></li><li><span class='pre'>callback</span> : Function<div class='sub-desc'><p>Callback function to be called when the Operation has completed (whether\nsuccessful or not)</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>Scope to execute the callback function in</p>\n</div></li></ul></div></div></div></div></div></div></div>"});